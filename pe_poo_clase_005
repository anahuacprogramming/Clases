

// variables to store the delay and target counts
int delayCount;
int targetCount;

// setup function
void setup() {
  size(500, 500);
  background(255);

  delayCount = 0;
  targetCount = (int) random(5, 50); // set target count to a random integer between 5 and 50
}

// draw function
void draw() {

  /* draw a rectangle on your mouse point while you pressing 
   the left mouse button*/

  int style; 

  delayCount++; // increment delay count (shorthand for delayCount = delayCount + 1)

  if (delayCount == targetCount) {
    style = (int) random(4);
    targetCount = (int) random(5, 10) ;
    delayCount = 0;
  } else {
    style = 0;
  }


  if (mousePressed) {

    stroke(0); 
    fill(0);

    // switch statement
    println(style);
    switch(style) {
    case 0:
      // draw a point
      point(mouseX+random(-10, 10), mouseY+random(-10, 10));

      strokeWeight(random(10));
      stroke(#8DFA35);
      line(mouseX, mouseY, pmouseX, pmouseY);
      break;

    case 1:
      // draw a circle with random radius
      float esize = random(1, 100);
      //int micolor=(int)random(2);
      if (esize >50) {
        fill(255, 0, 0, random(50, 80));
      } else {
        fill(0, 0, 255, random(50, 80));
      }
      ellipse(mouseX, mouseY, esize, esize);
      break;

    case 2:
      // draw a random sized rectangle
      float qsize = random(1, 10);
      quad(mouseX-qsize, mouseY, mouseX, mouseY-qsize, mouseX+qsize, mouseY, mouseX, mouseY+qsize   );
      break;

    case 3:
      // draw a triangle with random size
      float tsize = random(1, 5);
      triangle(mouseX-tsize, mouseY+tsize, mouseX, mouseY-tsize, mouseX+tsize, mouseY+tsize); 
      break;
    } // end of switch statement
  }


  // save your drawing when you press keyboard 's'
  if (keyPressed == true && key=='s') {
    saveFrame("MyDrawing1.jpg");
  }

  // erase your drawing when you press keyboard 'r'
  if (keyPressed == true && key == 'r') {
    background(255);
  }
}
